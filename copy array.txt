/**Bismillahir Rahmanir Rahim**/
#include <bits/stdc++.h>
using namespace std;
#define inf           (1<<29)
#define pb            push_back
#define mp            make_pair
#define eps           1e-9
#define nl            printf("\n")
#define spc           printf(" ")
#define sci(n)        scanf("%ld",&n)
#define sc64(n)       scanf("%I64d",&n)
#define scii(a,b)     scanf("%ld %ld",&a,&b)
#define sc6464(a,b)   scanf("%I64d %I64d",&a,&b)
#define scs(s)        scanf("%s",s)
#define scss(a,b)     scanf("%s %s",a,b)
#define scd(f)        scanf("%lf",&f)
#define scdd(a,b)     scanf("%lf %lf",&a,&b)
#define pfi(a)        printf("%ld",a)
#define pf64(a)       printf("%I64d",a)
#define pfii(a,b)     printf("%ld %ld",a,b)
#define pf6464(a,b)   printf("%I64d %I64d",a,b)
#define pfs(a)        printf("%s",a)
#define pfss(a,b)     printf("%s %s",a,b)
#define pfd(a)        printf("%lf",a)
#define pfdd(a,b)     printf("%lf %lf",a,b)
#define rep(i,n)      for(int i(0),_n(n);i<_n;++i)
#define repl(i,n)      for(int i(1),_n(n);i<=_n;++i)
#define repr(i,n)     for(int i=n;i>=0;i--)
#define repi(i,a,b)   for(int i(a),_b(b);i<=_b;++i)
#define repir(i,a,b)  for(int i=a;i>=b;i--)
#define ff            first
#define ss            second
#define all(a)        a.begin(),a.end()
#define mem(x,a)      memset(x,a,sizeof(x))
#define repe(it,c)    for(__typeof((c).begin()) it=(c).begin();it!=(c).end();++it)
int dx[]={0,0,1,-1,1,-1,1,-1},dy[]={1,-1,0,0,1,-1,-1,1};
typedef long long ll;
typedef vector<int> vi;
typedef vector<string> vs;
typedef vector<vector<int> > vvi;
using namespace std;
inline void cn( long &n )//fast input function
{
        n=0;
        long ch=getchar();int sign=1;
        while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getchar();}
        while(ch >= '0' && ch <= '9')
                n = (n<<3)+(n<<1) + ch-'0', ch=getchar();
        n=n*sign;
}
template<class T> void cmin(T &a,T b){if(b<a) a=b;}
template<class T> void cmax(T &a,T b){if(b>a) a=b;}
template<class T> int len(const T&c){return (int)c.size();}
template<class T> int len(char c[]){return (int)strlen(c);}
string itos(long n){string s;while(n){s+=(n%10+48);n/=10;}reverse(all(s));return s;}
long stoi(string s){long n=0;rep(i,len(s))n=(n<<3)+(n<<1)+(s[i]-48);return n;}

//Polya-Burnside theory : (n^6+3n^4+12n^3+8n^2)/24
#define DEBUG 1
#if DEBUG && !ONLINE_JUDGE
	#define debug(args...) (Debugger()) , args
	class Debugger { public: Debugger(const std::string& _separator = ", ") : first(true), separator(_separator){} template<typename ObjectType> Debugger& operator , (const ObjectType& v) { if(!first) std::cerr << separator; std::cerr << v; first = false; return *this; } ~Debugger() { std::cerr << endl;} private: bool first; std::string separator; }; template <typename T1, typename T2> inline std::ostream& operator << (std::ostream& os, const std::pair<T1, T2>& p) { return os << "(" << p.first << ", " << p.second << ")"; } template<typename T> inline std::ostream &operator << (std::ostream & os,const std::vector<T>& v) { bool first = true; os << "["; for(unsigned int i = 0; i < v.size(); i++) { if(!first) os << ", "; os << v[i]; first = false; } return os << "]"; } template<typename T> inline std::ostream &operator << (std::ostream & os,const std::set<T>& v) { bool first = true; os << "["; for (typename std::set<T>::const_iterator ii = v.begin(); ii != v.end(); ++ii) { if(!first) os << ", "; os << *ii; first = false; } return os << "]"; } template<typename T1, typename T2> inline std::ostream &operator << (std::ostream & os,const std::map<T1, T2>& v) { bool first = true; os << "["; for (typename std::map<T1, T2>::const_iterator ii = v.begin(); ii != v.end(); ++ii) { if(!first) os << ", "; os << *ii ; first = false; } return os << "]"; }
#else
		#define debug(args...)
#endif
#define MX 100005
long  tree[3*MX],store[MX],a[MX],b[MX];
void update(long l,long r,long i,long j,long node,long val)
{
    if(r<i||l>j) return;
    if(l>=i&&r<=j)
    {
        tree[node]=val;
        return;
    }
    long mid=(l+r)>>1;
    update(l,mid,i,j,2*node,val);
    update(mid+1,r,i,j,2*node+1,val);
}
int main()
{
    long n,q,x,y,k,f;
    scanf("%ld %ld",&n,&q);
    long long bn=1;
        long j=1;
        while(bn<n)
        {
            bn=1LL<<j;
            j++;
        }
       // cout<<bn<<endl;
    repl(i,n)
        scanf("%ld",&a[i]);
    repl(i,n)
        scanf("%ld",&b[i]);
        repl(i,q)
        {
            cn(f);
            if(f==1)
            {
                cn(x);cn(y);cn(k);
                update(1,bn,y,y+k-1,1,i);
                store[i]=x-y;
            }
            else
            {
                cn(x);
                long p=bn+x-1;
                long mx=0;
              //  cout<<"       "<<p<<endl;
                while(p)
                {
                    cmax(mx,tree[p]);
                    p/=2;
                }
             //   cout<<mx<<endl;
                if(mx==0)
                printf("%ld\n",b[x]);
                else
                {
                    printf("%ld\n",a[x+store[mx]]);
                }
            }
        }
return 0;
}
