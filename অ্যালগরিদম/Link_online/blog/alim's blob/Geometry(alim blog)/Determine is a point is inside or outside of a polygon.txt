/*
    Algorithm: This algorithm finds Is a point is inside a convex
    polygon or not.
    Note That:
            1) My algorithm assumes the points is given in
                CCW(Counter-Clock-Wise) direction.
            2) IsInConvex return true if Point P is inside the
                Polygon(Including edge), returns false otherwise.
            3) This algorithm only works for Convex Polygon.
            4) Complexity O(logN)
            5) Here V[] holds all the points of polygon.
*/
 
//Related Problem: http://codeforces.com/contest/166/problem/B
#include<bits/stdc++.h>
using namespace std;
#define LL long long
 
LL n,m;
struct Point
{
    LL x,y;
};
bool IsLeft(Point a,Point b,Point c)
{
    //checking if point c is left or right of line ab
    return ((a.x*b.y-b.x*a.y)+(b.x*c.y-c.x*b.y)+(c.x*a.y-a.x*c.y))>0;
}
 
LL TriangArea(Point a,Point b,Point c)
{
    return ((a.x*b.y-b.x*a.y)+(b.x*c.y-c.x*b.y)+(c.x*a.y-a.x*c.y));
}
 
bool IsInConvex(Point *v,Point p)
{
    /*
        Returns true if Point P is inside the Polygon V[].
        Otherwise returns false.
    */
    LL low=1,high=n-1;
 
    if(TriangArea(v[0],v[1],p)<0) return 0;
    if(TriangArea(v[n-1],v[0],p)<0) return 0;
 
    while(high-low>1)
    {
        LL mid=(low+high)/2;
 
        if(TriangArea(v[0],v[mid],p)>0) low=mid;
        else high=mid;
    }
 
    return TriangArea(v[low], v[high], p)>=0;
}
 
 
int main()
{
    LL i,j,k,d,test,aa,bb;
    Point a[100009];
    while(cin>>n)
    {
        for(i=0;i<n;i++)
        {
            cin>>aa>>bb;
            a[i].x=aa;
            a[i].y=bb;
        }
        cin>>m;
        for(i=0;i<m;i++)
        {
            cin>>aa>>bb;
            Point tt;
            tt.x=aa;
            tt.y=bb;
            if(IsInConvex(a,tt)) puts("Inside Convex Polygon");
            else puts("Outside Convex Polygon");
        }
    }
    return 0;
}