/*
Given N strings of a dictionary and Q queries. In each queries you have have to say
whether a string is FOUND or NOT FOUND in this dictionary.
*/
 
#include<bits/stdc++.h>
using namespace std;
#define LL long long
 
struct node
{
    bool endmark;
    node *next[28];
    node()
    {
        endmark=false;
        for(int i=0;i<26;i++)
            next[i]=NULL;
    }
};
 
node *root;
 
void insert(string s)
{
    node *curr=root;
    int sz=s.size();
    for(int i=0;i<sz;i++)
    {
        int id=s[i]-'a';
        if(curr->next[id]==NULL)
            curr->next[id]=new node();
        curr=curr->next[id];
    }
    curr->endmark=true;
}
 
bool find(string s)
{
    node *curr=root;
    int sz=s.size();
    for(int i=0;i<sz;i++)
    {
        int id=s[i]-'a';
        if(curr->next[id]==NULL) return false;
        curr=curr->next[id];
    }
    return curr->endmark;
}
 
void del(node *curr)
{
    for(int i=0;i<26;i++)
    {
        if(curr->next[i])
            del(curr->next[i]);
    }
    delete(curr);
}
 
int main()
{
    int i,j,k,n,m,d,q;
    string s;
    while(cin>>n>>q)
    {
        root=new node();  // we have created root node.
        for(i=0;i<n;i++)
        {
            cin>>s;
            insert(s);
        }
        for(i=0;i<q;i++)
        {
            cin>>s;
            if(find(s)==true) puts("Found");
            else puts("Not Found");
        }
        del(root);  // The whole trie is deleted
    }
    return 0;
}