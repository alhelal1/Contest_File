/*
1.      0 x y v - you have to add v to all numbers in
        the range of x to y (inclusive), where x and y are
        two indexes of the array.
2.      1 x y - output a line containing a single integer
        which is the sum of all the array elements between
        x and y (inclusive).
    Algorithm Used: Segment Tree
    Useful Links: http://lightoj.com/volume_showproblem.php?problem=1164
*/
 
#include<bits/stdc++.h>
using namespace std;
#define LL long long
const int inf=1000000007;
 
struct info
{
    long long sum,add;
};
 
info tree[400050];
 
void update(LL node,LL b,LL e,LL i,LL j,LL value)
{
    if(b>j||e<i) return;
    if(b>=i&&e<=j)
    {
        tree[node].sum+=value*(e-b+1);
        tree[node].add+=value;
        return;
    }
    LL left=node<<1;
    LL right=left+1;
    LL mid=(b+e)>>1;
    update(left,b,mid,i,j,value);
    update(right,mid+1,e,i,j,value);
    tree[node].sum=tree[left].sum+tree[right].sum+(e-b+1)*tree[node].add;
}
 
long long query(LL node,LL b,LL e,LL i,LL j,LL carry)
{
    if(b>j||e<i) return 0;
    if(b>=i&&e<=j)
        return tree[node].sum+carry*(e-b+1);
    LL left=node<<1;
    LL right=left+1;
    LL mid=(b+e)>>1;
    long long p1=query(left,b,mid,i,j,carry+tree[node].add);
    long long p2=query(right,mid+1,e,i,j,carry+tree[node].add);
    return p1+p2;
}
int main()
{
    LL i,j,k,n,m,d,t=0,test,op,x,y,value,q;
    scanf("%lld",&test);
    while(test--)
    {
        scanf("%lld%lld",&n,&q);
//        for(i=1;i<=3*n;i++)
//        {
//            tree[i].sum=0;
//            tree[i].add=0;
//        }
        memset(tree,0,sizeof(tree));
        printf("Case %lld:\n",++t);
        while(q--)
        {
            scanf("%lld",&op);
            if(op==0)
            {
                scanf("%lld%lld%lld",&x,&y,&value);
                update(1,1,n,x+1,y+1,value);
//                for(i=1;i<=25;i++)
//                    printf("tree%d=%d\n",i,tree[i].sum);
            }
            else
            {
                scanf("%lld%lld",&x,&y);
                printf("%lld\n",query(1,1,n,x+1,y+1,0));
            }
        }
    }
    return 0;
}