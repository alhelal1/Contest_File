#include<stdio.h>
#include<algorithm>
#include<iostream>
#include<string.h>
#include<queue>
#include<stack>
#include<map>
#include<math.h>
using namespace std;
typedef long long LL;
bool prime[10005]= {0};
int ans[10005];
int aa[10005];
int bt[10005];
int cc[10005]= {0};
bool dd[10005]= {0};
queue<int>que;
int main(void)
{
        int i,j,k;
        for(i=2; i<200; i++)
        {
                for(j=i; i*j<=10000; j++)
                {
                        prime[i*j]=true;
                }
        }
        int cnt=0;
        for(i=2; i<=10000; i++)
        {
                if(!prime[i])
                {
                        ans[cnt++]=i;
                }
        }int d;
        cin>>d;int s;
        for(s=1;s<=d;s++)
        {       cin>>k;
                memset(bt,0,sizeof(bt));
                for(i=0; i<k; i++)
                {
                        scanf("%d",&aa[i]);
                }
                for(i=0; i<k; i++)
                {
                        int nn=aa[i];
                        int t=0;
                        int flag=0;
                        while(nn>1)
                        {
                                if(flag==0&&nn%ans[t]==0)
                                {
                                        flag=1;
                                        que.push(ans[t]);
                                        nn/=ans[t];
                                }
                                else if(nn%ans[t]==0)
                                {
                                        nn/=ans[t];
                                        flag=1;
                                }
                                else
                                {
                                        flag=0;
                                        t++;
                                }
                        }
                        if(nn>1)
                        {
                                que.push(nn);
                        }
                        int xx=0;
                        while(!que.empty())
                        {
                                cc[xx++]=que.front();
                                que.pop();
                        }
                        int x;
                        int y;
                        for(x=1; x<=(1<<xx)-1; x++)
                        {
                                int ak=1;
                                int vv=0;
                                for(j=0; j<xx; j++)
                                {
                                        if(x&(1<<j))
                                        {
                                                vv++;
                                                ak*=cc[j];
                                        }
                                }
                                bt[ak]+=1;
                                if(vv%2)
                                        dd[ak]=true;
                        }
                }
                LL sum=0;
                LL sum1=0;
                for(i=2; i<=10000; i++)
                {
                        if(bt[i]>=4)
                        {
                                LL nn=(LL)bt[i]*(LL)(bt[i]-1)*(LL)(bt[i]-2)*(LL)(bt[i]-3)/24;
                                if(dd[i])
                                        sum+=nn;
                                else sum-=nn;
                        }
                }
                sum1=(LL)k*(LL)(k-1)*(LL)(k-2)*(LL)(k-3)/24;
                sum1-=sum;printf("Case %d: ",s);
                printf("%lld\n",sum1);
        }
        return 0;
}
