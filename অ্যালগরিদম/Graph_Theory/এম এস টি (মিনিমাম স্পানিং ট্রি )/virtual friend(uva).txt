#include<bits/stdc++.h>
///AL-HELAL
#define rep(i,n) for(int i=0;i<n;i++)
#define ll long long
#define all(v) v.begin(),v.end()
#define read(a) freopen("a.txt","r",stdin)
#define write(b) freopen("b.txt","w",stdout)
#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define min4(a,b,c,d) min(min(a,b),min(c,d))
#define max4(a,b,c,d) max(max(a,b),max(c,d))
#define maxall(v) *max_element(all(v))
#define minall(v) *min_element(all(v))
#define pb push_back
#define mk make_pair
#define SORT(v) sort(all(v))
#define UN(v) SORT(v), (v).earse(unique(all(v)),v.end())
#define common(a,b) SORT(a), SORT(b), a.erase(set_intersection(all(a),all(b),a.begin()),a.end())
#define uncommon(a,b) SORT(a), SORT(b), a.erase(set_symmetric_difference(all(a),all(b),a.begin()),a.end())
#define FILL(a,d) memset(a,d,sizeof(a))
#define ULL unsigned long long
#define LL long long
#define PI 2*acos(0.0)
#define pi pair<int,int>
#define fr(i,a,b) for (int i = (a), _b = (b); i <= _b; i++)
#define frr(i,a,b) for (int i = (a), _b = (b); i >= _b; i--)

#define repr(i,n) for (int i = (n) - 1; i >= 0; i--)
#define FOR(i,a,b) for (int i = (a), _b = (b); i <= _b; i++)
#define FORD(i,a,b) for (int i = (a), _b = (b); i >= _b; i--)
#define REP(i,n) for (int i = 0, _n = (n); i < _n; i++)
#define REPD(i,n) for (int i = (n) - 1; i >= 0; i--)
#define foreach(it, ar) for ( typeof(ar.begin()) it = ar.begin(); it != ar.end(); it++ )
#define fill(ar, val) memset(ar, val, sizeof(ar))
#define debug(x) cout<<#x<<": "<<x<<endl


#define pb push_back
#define mp make_pair
#define ff first
#define ss second

#define BIT(n) (1<<(n))
#define AND(a,b) ((a) & (b))
#define OR(a,b) ((a) | (b))
#define XOR(a,b) ((a) ^ (b))
#define sqr(x) ((x) * (x))


#define INF 1000111222
#define EPS 1e-3
#define MAXN 20000
#define MOD 1000000007

using namespace std;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef vector<ii> vii;
typedef vector<int> vi;
typedef vector<string> vs;

template<typename T>inline T gcd(T a, T b){if (b == 0)return a;else return gcd(b, a % b);}
template<typename T>inline T lcm(T a, T b){return (a * b) / gcd(a, b);}

const int mx=5010005;
int dp[1050][1050];
ll a,b,c,n,m,res=0,ans=0,sum=0,cc=0;
ll ress=0;
//ll ar[1000][1000];
//vs v;
ll color[100055];
ll path[100055]={0};
ll cost[100005]={0};
string s,ss;
int find(int a)
{
    if(path[a]==a)   return a;
    return path[a]=find(path[a]);
}
int Union(int a,int b)
{
    int u=find(a),v=find(b);
    if(u!=v)
    {
        path[v]=u;
        cost[u]+=cost[v];
    }
    return cost[v]=cost[u];
}
int main()
{
    int t;
    scanf("%d\n", &t);
    while(t--)
    {
         map<string,ll>mp;
         mp.clear();
            scanf("%d\n", &n);
         for(int i=0;i<=n*2;i++)
         {
            path[i]=i;
            cost[i]=1;
         }
         ress=0;
         mp.clear();
        ll cnt=1;
         for(int i=0;i<n;i++)
         {
         cin>>s>>ss;
         if(mp[s]==0)
         {
             mp[s]=cnt;
             cnt++;
         }
         if(mp[ss]==0)
         {
             mp[ss]=cnt;
             cnt++;
         }
             cout<<Union(mp[s],mp[ss])<<endl;
         }
     }

return 0;

}
