///problem link
///https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=164&page=show_problem&problem=277
#include<bits/stdc++.h>
#define mxx 21
using namespace std;
vector<int>g[mxx],cost[mxx];
struct node {
    int u,w;
    node(int a,int b) {
        u=a;
        w=b;
    }
    bool operator<(const node& p)const {
        return w>p.w;
    }
};
int d[mxx],par[mxx];
int dijkstra(int src,int n) {
    memset(d,63,sizeof(d));
    memset(par,-1,sizeof(par));
    priority_queue<node>q;
    q.push(node(src,0));
    d[src]=0;
    while(!q.empty()) {
        node top=q.top();
        q.pop();
        int u=top.u;
        if (u==n)
            return d[n];

        for(int i=0; i<(int)g[u].size(); i++) {
            int v=g[u][i];
            if(d[u]+cost[u][i]<d[v]) {
                d[v]=d[u]+cost[u][i];
                par[v]=u;
                q.push(node(v,d[v]));
            }
        }
    }
    return -1;
}
int main() {
    //freopen("in.txt","r",stdin);
    int n,u,w,x,c=0;
    while(cin>>n and n!=0) {
        c++;
        for(int i=1; i<=n; i++) {
            cin>>x;
            for(int j=0; j<x; j++) {
                cin>>u>>w;
                g[i].push_back(u);
                //g[u].push_back(i);
                cost[i].push_back(w);
                //cost[u].push_back(w);
            }
        }
        int src,des;
        cin>>src>>des;
        int ret=dijkstra(src,des);
        //printf("%d\n",ret);
        printf("Case %d: Path = ",c);
        int u=des;
        vector<int>path;

        while(u!=-1) {
            path.push_back(u);
            u = par[u];
        }

        reverse(path.begin(), path.end());

        for(int i=0; i<path.size(); i++) {
            if(i==0) cout<<path[i];
            else cout<<" "<<path[i];
        }
        printf("; %d second delay\n",ret);
        //cout<<endl;
        for(int i=0; i<=n; i++) {
            g[i].clear();
            cost[i].clear();
        }
    }
    return 0;
}

