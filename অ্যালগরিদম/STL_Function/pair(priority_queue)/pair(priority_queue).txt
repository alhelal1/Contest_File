VI v[4];
int main()
{
    //Fast;

    cin>>n;

    rep(i,n)  cin>>ar[i];
    sort(ar,ar+n);

    LL c=1;


    priority_queue< pair <LL,LL>  >pq;


    ar[n]=-1;
    rep(i,n)
    {

        if(ar[i]==ar[i+1])c++;
        else
        {
        pq.push(make_pair(c,ar[i]));
        c=1;

        }
    }

    while(len(pq)>2)
    {
        pair<LL,LL>pr,pr1,pr2;
        pr=pq.top();pq.pop();
        pr1=pq.top();pq.pop();
        pr2=pq.top();pq.pop();

        if(pr.first>1)  pq.push(mp(pr.FF-1,pr.SS));
        if(pr1.first>1)  pq.push(mp(pr1.FF-1,pr1.SS));
        if(pr2.first>1)  pq.push(mp(pr2.FF-1,pr2.SS));


        ar[0]=pr.SS;
        ar[1]=pr1.SS;
        ar[2]=pr2.SS;

        sort(ar,ar+3);


        v[0].pb(ar[2]);
        v[1].pb(ar[1]);
        v[2].pb(ar[0]);
    }
    cout<<len(v[0])<<"\n";
    rep(i,len(v[0]))
    {
        printf("%lld %lld %lld\n",v[0][i],v[1][i],v[2][i]);
    }

   return 0;

}
