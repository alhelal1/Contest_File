//With help of editorial
/*Useful info
__builtin_popcount(n) counts number of active bits.
__builtin_popcountl(n) for long and ll for long long*/
 
//My shortcuts
#include<bits/stdc++.h>
#define ll long long int
#define sf(n) scanf("%d",&n);
#define sfl(n) scanf("%lld",&n);
#define sful(n) scanf("%llu",&n);
#define pf(n) printf("%d",n);
#define pfl(n) printf("%lld",n);
#define pful(n) printf("%llu",n);
#define ps printf(" ");
#define pn printf("\n");
#define str(a) printf("%s",a);
#define cut(n,val) memset(n,val,sizeof(n));
#define pub push_back()
#define ln size()
#define mpr make_pair()
#define bpop(n) __builtin_popcount(n)
const long long int mod=1e9+7;
using namespace std;
//Functions->
int mx=1e7+1;
vector<int>prim(mx+47,0);
void cal()
{
    for(int i=2;i<=mx;i++)
    {
        if(prim[i]==0)
        {
            for(int j=1;j<=mx/i;j++)
            prim[i*j]=i;
        }
    }
}
//Driver program->
int main()
{
    cal();
    
    int t;
    sf(t);
    while(t--)
    {
        int n;
        sf(n);
        
        ll ans=1;
        while(n>1)
        {
            int pr=prim[n];
            int pro=1;
            
            while(n%pr==0)
            {
                pro*=pr;
                n=n/pr;
            }
            
            ans*= 1LL*pro*pro -(1LL*pro*pro-1)/(pr+1);
        }
        
        pfl(ans);pn;
   }
   return 0;
} 