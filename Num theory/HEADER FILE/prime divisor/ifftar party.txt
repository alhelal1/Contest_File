#include <cstdio>  
#include <iostream>  
#include <algorithm>  
#include <set>  
#include <vector>  
#define __int64 long long  
using namespace std;  
int cas;  
  
void Deal_set ()  
{  
    int P,L,n;  
    set<int> s;  
    scanf("%d%d",&P,&L);  
    n=P-L;  
    for (__int64 i=1;i*i<=n;i++)            //int i????  
        if (n%i == 0)  
        {  
            if (i>L)  
                s.insert(i);  
            if (n/i > L)  
                s.insert(n/i);  
        }  
        printf("Case %d: ",cas);  
        if (s.empty())  
            printf("impossible\n");  
        else  
        {  
            set<int>::iterator it,it2;  
            it2=s.begin();  
            it2++;  
            for (it=s.begin();it2!=s.end();it++,it2++)  
                printf("%d ",*it);  
            printf("%d",*it);  
            printf("\n");  
        }  
}  
  
void Deal_vector ()  
{  
    int P,L,n;  
    vector<int> a;  
    scanf("%d%d",&P,&L);  
    n=P-L;  
    for (__int64 i=1;i*i<=n;i++)            //int i????  
    {  
        if (n%i == 0)  
        {  
            if (i>L)  
                a.push_back(i);  
            if (n/i>L && i*i!=n)  
                a.push_back(n/i);  
        }  
    }  
    sort(a.begin(),a.end());  
    printf("Case %d: ",cas);  
    if (a.empty())  
        printf("impossible\n");  
    else  
    {  
        int size=a.size();  
        for (int i=0;i<=size-2;i++)  
            printf("%d ",a[i]);  
        printf("%d\n",a[size-1]);  
    }  
}  
  
int main()  
{  
    int T;  
    scanf("%d",&T);  
    for (cas=1;cas<=T;cas++)          //????  
    {  
        Deal_vector ();  
    //  Deal_set ();  
    }  
    return 0;  
}  