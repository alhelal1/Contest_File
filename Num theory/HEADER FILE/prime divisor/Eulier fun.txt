#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;

const int MAXN = 5000010;

unsigned long arr[MAXN];
unsigned long IsPrime[MAXN];
unsigned long used[MAXN];

void Pre_Solve_Euler()
{
    int i, j;

    for(i = 0; i < MAXN; ++i)
        IsPrime[i] = 1, used[i] = 0;
    IsPrime[0] = IsPrime[1] = 0;
    for(i = 2; i*i < MAXN; ++i)
    {
        if(IsPrime[i])
        {
            for(j = i+i; j < MAXN; j += i)
                IsPrime[j] = 0;
        }
    }
    for(i = 1; i < MAXN; ++i)
        arr[i] = i;
    for(i = 2; i < MAXN; ++i)
    {
        if(IsPrime[i])
        {
            for(j = i; j < MAXN; j += i)
            {
                if(!used[j])
                    used[j] = 1, arr[j] = j;
                arr[j] = arr[j] / i*(i-1);
            }
        }
    }
    for(i = 2; i < MAXN; ++i)
        arr[i] = arr[i-1] + arr[i] * arr[i];
}
int main()
{
    int T, a, b, kcase = 1;
    Pre_Solve_Euler();
    scanf("%d", &T);
    while(T--)
    {
        scanf("%d %d", &a, &b);
        printf("Case %d: %lu\n", kcase++, arr[b]-arr[a-1]);
    }
    return 0;
}

??????,??????????????????

#include <iostream>
#include <cstring>
#include <cstdio>
#include <cstdlib>

using namespace std;

const int MAXN = 5000010;


unsigned long arr[MAXN];

void Pre_Slove_Euler()
{
    memset(arr, 0, sizeof(arr));
    arr[1] = 1;
    for(int i = 2; i < MAXN; ++i)
    {
        if(!arr[i])
        {
            for(int j = i; j < MAXN; j += i)
            {
                if(!arr[j])
                    arr[j] = j;
                arr[j] = arr[j] / i*(i-1);
            }
        }
    }

    for(int i = 2; i < MAXN; ++i)
        arr[i] = arr[i-1] + arr[i]*arr[i];
}

int main()
{
    int T, kcase = 1, a, b;
    Pre_Slove_Euler();
    scanf("%d", &T);
    while(T--)
    {
        scanf("%d %d", &a, &b);
        printf("Case %d: %lu\n", kcase++, arr[b]-arr[a-1]);
    }
    return 0;
}