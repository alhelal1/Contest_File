using namespace std;
#include<bits/stdc++.h>
typedef long long  LL;
typedef   pair<LL,LL>  PII;
typedef   vector< PII > VPII;
typedef   vector<long long>   VI;
typedef   map<string,LL>  MSI;
typedef   map<LL,LL>  MII;
///Print
#define R(n)       scanf("%lld", &n)
#define P(a)  printf("%lld\n",a)
#define NL printf("\n")
///Case
#define CASE(no) printf("Case %lld: ",++no)
#define CASENL(no) printf("Case %lld:\n",++no)
///LOOP
#define FOR(x,n) for(__typeof(n) x=0;x<(n);x++)
#define FORS(i,x) for(int  i=0;i<(x.size());i++)
#define FORR(x,n) for(__typeof(n) x=1;x<=(n);x++)
#define FORSTL(x,n) for(__typeof(n.begin()) x=n.begin();x!=n.end();x++)
///Shortcut
#define MEM(ar,value) memset(ar,value,sizeof(ar))
#define ALL(x) x.begin(),x.end()
#define Unique(store) store.resize(unique(store.begin(),store.end())-store.begin())
#define LEN(s) s.size()
#define MP make_pair
#define PB push_back
#define FF first
#define SS second
#define MIN3(a,b,c) min(a,min(b,c))
#define MAX3(a,b,c) max(a,max(b,c))
#define EPS (1e-9)
#define PI acos(-1.0)
#define isEq(a,b) (fabs((a)-(b))<eps)
#define FAST ios_base::sync_with_stdio(false); cin.tie(false);
///DEBUG
#define D(x) cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<endl;
#define DD(x,y) cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<endl;
#define DDD(x,y,z) cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<" | "#z" = "<<z<<endl;
template<class T>T gcd(T a,T b){return b == 0 ? a : gcd(b, a % b);}
template<typename T>T lcm(T a, T b) {return a / gcd(a,b) * b;}
template<class T>T my_pow(T n,T p){if(p==0)return 1;T x=my_pow(n,p/2);x=(x*x);if(p&1)x=(x*n);return x;} ///n to the power p
template<class T>T big_mod(T n,T p,T m){if(p==0)return (T)1;T x=big_mod(n,p/2,m);x=(x*x)%m;if(p&1)x=(x*n)%m;return x;}
template <class T> T extract(string s, T ret) {stringstream ss(s); ss >> ret; return ret;}/// extract words or numbers from a line
string itos(LL n){string s;while(n){s+=(n%10+48);n/=10;}reverse(ALL(s));return s;}
LL stoi(string s){LL n=0;FOR(i,LEN(s))n=n*10+(s[i]-48);return n;}
//struct info{LL x,y;}arr[100005];bool com(info a,info b){return (a.x<b.x) or (a.x==b.x and a.y<b.y);}

LL ar[200005],tree[800001];
LL br[200005];
LL a=0,b=0,c=0,r=0,rr=0,res=0,n,m,t=0,ks=0;
//string  s,ss;

LL arr[200005][2];



void insert(LL idx,LL st,LL end)
{

    if(st==end)
    {
        tree[idx]=end;
        return ;
    }
    LL mid=(st+end)/2;

    insert(idx*2,st,mid);
    insert(idx*2+1,mid+1,end);


   tree[idx]=(arr[tree[idx*2]][0]>=arr[tree[idx*2+1]][0])?tree[idx*2]:tree[idx*2+1];

   return ;


}


LL query(LL idx,LL st,LL end,LL i,LL j)
{

    if(st==i and end==j)  return  tree[idx];

    LL mid=(st+end)/2;
    if(j<=mid)   return  query(idx*2,st,mid,i,j);
    else if(i>mid)  return   query(idx*2+1,mid+1,end,i,j);
    else
    {
        LL cc=query(idx*2,st,mid,i,mid);
        LL dd=query(idx*2+1,mid+1,end,mid+1,j);





        if(arr[cc][0]>=arr[dd][0])  return cc;
        else return dd;
    }


}




int main()
{
    //Fast;


    scanf("%lld%lld",&n,&m);

    FORR(i,n)scanf("%lld",&ar[i]);

    FORR(i,n)
    {

       br[i]=br[i-1]+ar[i];

    }

    LL j=1;


    FORR(i,n)
    {
        if(i+m-1>n)break;
        arr[j][0]=(br[i+m-1]-br[i-1]);
        arr[j][1]=i;
        j++;
    }






    insert(1,1,j-1);







    LL first=0,second=0;
    LL ans=0;
    FORR(i,j)
    {
        if(i+m>=j)break;

        LL aa=arr[i][0];
        LL bb=query(1,1,j-1,i+m,j-1);
        LL cc=arr[bb][0];
        if(aa+cc>ans)
        {
            first=arr[i][1];
            second=arr[bb][1];

            ans=aa+cc;
        }
    }

   // printf("%lld\n",ans);

    printf("%lld %lld\n",first,second);









   return 0;

}


